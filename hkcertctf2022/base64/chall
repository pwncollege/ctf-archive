#!/opt/pwn.college/python

import random
import base64

# Encrypt the message using "base64 encryption".
def base64_encryption(message, key):
    charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'

    # This is to ensure that "key" is a permutation of "charset".
    assert len(key) == 64 and set(charset) == set(key)

    charmap = {}
    for s, t in zip(charset, key):
        charmap[s] = t

    # What is base64 encryption? Basically, we encode the message with you "base64 encoding"...
    encoded = base64.b64encode(message).decode().rstrip('=')

    # ...with another character set!
    encrypted = ''.join([charmap[c] for c in encoded])

    return encrypted


def main():
    charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'

    key = list(charset)
    random.shuffle(key)
    key = ''.join(key)

    # Read the flag from /flag
    with open('/flag', 'r') as f:
        flag = f.read().strip()
    
    # Read the article template and insert the flag
    with open('article.txt', 'r') as f:
        article_template = f.read()
    
    # Replace the placeholder with the actual flag
    article_with_flag = article_template.replace('{FLAG_PLACEHOLDER}', flag)
    
    # Convert to bytes for encryption
    message = article_with_flag.encode('utf-8')

    encrypted = base64_encryption(message, key)
    with open('/challenge/message.enc.txt', 'w') as f: f.write(encrypted)

if __name__ == '__main__':
    main()
