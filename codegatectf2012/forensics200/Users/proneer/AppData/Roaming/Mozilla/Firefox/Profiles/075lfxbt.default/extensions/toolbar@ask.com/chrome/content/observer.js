/*
 * Copyright (C) 2008-2010 APN, LLC. All rights reserved
 * References to external sources embedded in the code.
 * 
 * Author: Tanmay Shrivastava
 * Description: Toolbar constants.
 */
var ATB_Observer=function(){this.subscribers={};this.Events={INIT_START:"INIT_START",INIT_COMPLETE:"INIT_COMPLETE",UNLOAD_START:"UNLOAD_START",UNLOAD_COMPLETE:"UNLOAD_COMPLETE",CORE_MODULES_LOADED:"CORE_MODULES_LOADED",ALL_MODULES_LOADED:"ALL_MODULES_LOADED",CONFIG_UPDATE_START:"CONFIG_UPDATE_START",CONFIG_UPDATE_COMPLETE:"CONFIG_UPDATE_COMPLETE",DB_CACHE_INIT_START:"DB_CACHE_INIT_START",DB_CACHE_INIT_COMPLETE:"DB_CACHE_INIT_COMPLETE",DB_CACHE_UNLOAD_START:"DB_CACHE_UNLOAD_START",DB_CACHE_UNLOAD_COMPLETE:"DB_CACHE_UNLOAD_COMPLETE",DB_CACHE_PURGE_START:"DB_CACHE_PURGE_START",DB_CACHE_PURGE_COMPLETE:"DB_CACHE_PURGE_COMPLETE",OPTIONS_SAVE:"OPTIONS_SAVE",LOCATION_CHANGED:"LOCATION_CHANGED",PRE_NAVIGATE_TO_URL_CALL:"PRE_NAVIGATE_TO_URL_CALL",POST_NAVIGATE_TO_URL_CALL:"POST_NAVIGATE_TO_URL_CALL",BUTTON_CLICK:"BUTTON_CLICK",PRE_SEARCH:"PRE_SEARCH",POST_SEARCH:"POST_SEARCH"};this.SUBSCRIBER_ID_DELIM=";;";document.getElementById("asktb").addEventListener("click",this.handleButtonClick,false)};ATB_Observer.prototype={subscribe:function(c,e,b,a){ATB.Logger.debug("Subscribing a new subscriber with callback-handler :",b,"added for event_type :",c,"and HandlerArgs:",a);if(!this.subscribers[c]){this.subscribers[c]={}}var d=this.generateSubscriberId(c);this.subscribers[c][d]={scope:e,handler:b,args:(a?a:[])};ATB.Logger.debug("Done. New subscriber ID: ",d);return d},unsubscribe:function(b){try{ATB.Logger.debug("Deleting subscriber with id :",b);delete this.subscribers[this.getEventType(b)][b];ATB.Logger.debug("Deletion complete.")}catch(a){ATB.Logger.error("Error while unsubscribing event with id: ",b,", Error: ",a)}},publish:function(f,b){if(!b){b={}}ATB.Logger.info("Publishing eventType: ",f," with eventArgs: ",b);if(this.subscribers[f]){var i=this.subscribers[f];for(var d in i){var a=i[d];try{if(a&&a.handler&&a.scope){var g=a.args;var j={originalArgs:g,eventArgs:b};ATB.Logger.debug("Calling currSubscriber.handler with scope: ",a.scope," and args: ",j);a.handler.call(a.scope,j);ATB.Logger.debug("Handler complete: ",a.handler," for eventType: ",f," and id: ",d)}else{ATB.Logger.error("Bad subscriber identified : ",a," , handler: ",a.handler,", scope: ",a.scope)}}catch(h){var c="";if(a&&a.handler){c=a.handler}ATB.Logger.error("Publishing failed for eventType: ",f," , handler: ",c,", id: ",d," , Error: ",h)}}}else{ATB.Logger.debug("Publish: Event (",f,") has 0 subscribers.")}},generateSubscriberId:function(a){return a+this.SUBSCRIBER_ID_DELIM+Math.floor(Math.random()*1000)+"-"+new Date().getTime()},getEventType:function(a){return a.split(this.SUBSCRIBER_ID_DELIM)[0]},handleButtonClick:function(a){if(a&&a.target&&a.target.id){var b=a.target.nodeName;if(b&&b==="toolbarbutton"){ATB.Observer.publish(ATB.Observer.Events.BUTTON_CLICK,{"button-id":a.target.id})}}},testObserverSystem:function(){ATB.Logger.info("Observers: Adding subscribers to test observer system.");this.testObserver(ATB.Observer.Events.INIT_START);this.testObserver(ATB.Observer.Events.INIT_COMPLETE);this.testObserver(ATB.Observer.Events.UNLOAD_START);this.testObserver(ATB.Observer.Events.UNLOAD_COMPLETE);this.testObserver(ATB.Observer.Events.CORE_MODULES_LOADED);this.testObserver(ATB.Observer.Events.ALL_MODULES_LOADED);this.testObserver(ATB.Observer.Events.CONFIG_UPDATE_START);this.testObserver(ATB.Observer.Events.CONFIG_UPDATE_COMPLETE);this.testObserver(ATB.Observer.Events.DB_CACHE_INIT_START);this.testObserver(ATB.Observer.Events.DB_CACHE_INIT_COMPLETE);this.testObserver(ATB.Observer.Events.DB_CACHE_UNLOAD_START);this.testObserver(ATB.Observer.Events.DB_CACHE_UNLOAD_COMPLETE);this.testObserver(ATB.Observer.Events.DB_CACHE_PURGE_START);this.testObserver(ATB.Observer.Events.DB_CACHE_PURGE_COMPLETE);this.testObserver(ATB.Observer.Events.OPTIONS_SAVE);this.testObserver(ATB.Observer.Events.PRE_NAVIGATE_TO_URL_CALL);this.testObserver(ATB.Observer.Events.POST_NAVIGATE_TO_URL_CALL);this.testObserver(ATB.Observer.Events.BUTTON_CLICK);this.testObserver(ATB.Observer.Events.PRE_SEARCH);this.testObserver(ATB.Observer.Events.POST_SEARCH);ATB.Logger.info("Observers: DONE adding subscribers for testing observer system.")},testObserver:function(b){if(!b){b=ATB.Observer.Events.INIT_START}var a=ATB.Observer.subscribe(b,this,ATB.Observer.testSubscriber,["hello","world"]);ATB.Logger.warn("Subscriber for helloWorldSubscriber available? ",(undefined!==this.subscribers[this.getEventType(a)][a]));var c=ATB.Observer.subscribe(b,this,ATB.Observer.testSubscriber,["foo","bar"]);ATB.Logger.warn("Subscriber for fooBarSubscriber available? ",(undefined!==this.subscribers[this.getEventType(c)][c]));ATB.Observer.unsubscribe(a);ATB.Logger.warn("Post unsubscription for helloWorldSubscriber available? ",(undefined!==this.subscribers[this.getEventType(a)][a]));ATB.Observer.unsubscribe(c);ATB.Logger.warn("Post unsubscription for fooBarSubscriber available? ",(undefined!==this.subscribers[this.getEventType(c)][c]));var a=ATB.Observer.subscribe(b,this,ATB.Observer.testSubscriber,["hello","world"]);var c=ATB.Observer.subscribe(b,this,ATB.Observer.testSubscriber,["foo","bar"])},testSubscriber:function(a){ATB.Logger.warn("TESTING: HANDLER for TESTING SUBSCRIBER. Original args : ",a.originalArgs.join(","),"  event args : ",JSON.stringify(a.eventArgs))}};