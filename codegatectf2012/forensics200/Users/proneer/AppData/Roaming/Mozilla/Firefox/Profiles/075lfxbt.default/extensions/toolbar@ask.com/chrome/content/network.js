/*
 * Copyright (C) 2008-2010 APN, LLC. All rights reserved
 * References to external sources embedded in the code.
 * 
 * Author: Vishal V. Shah
 * Description: Toolbar network module.
 */
var ATB_Network=function(){this.domainInContext="";this.uriInContext="";this.lastNetworkAvailabilityCheckTimeStamp=0;this.lastNetworkAvailability=true;this.searchDomainString="."+ATB.Prefs.getSearchSiteDomain();this.sync_request_timeout=parseInt(ATB.Prefs.getSyncRequestTimeout());var a=Components.interfaces.nsIWebProgressListener;this.stateFlagMap={STATE_START:a.STATE_START,STATE_REDIRECTING:a.STATE_REDIRECTING,STATE_TRANSFERRING:a.STATE_TRANSFERRING,STATE_NEGOTIATING:a.STATE_NEGOTIATING,STATE_RESTORING:a.STATE_RESTORING,STATE_STOP:a.STATE_STOP,STATE_IS_REQUEST:a.STATE_IS_REQUEST,STATE_IS_NETWORK:a.STATE_IS_NETWORK,STATE_IS_WINDOW:a.STATE_IS_WINDOW,STATE_IS_DOCUMENT:a.STATE_IS_DOCUMENT};this.regExpList=(ATB.Prefs.getCharPref("common-url-typo-regexp-arr")).split("||")};ATB_Network.prototype={getUriInContext:function(){return this.uriInContext},setUriInContext:function(a){this.uriInContext=a},getDomainInContext:function(){return this.domainInContext},setDomainInContext:function(a){this.domainInContext=a},getSearchDomainString:function(){return this.searchDomainString},getResponseXMLFromUrlAsynchronously:function(c,g,f,b){if(this.isNetworkAvailable()){netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");ATB.Logger.info("*Asynchronously* fetching text (XML) contents from url: ",c);var e=new XMLHttpRequest();var d=this;try{e.open("GET",c,true);e.onreadystatechange=function(i){if(e.readyState==4){if(e.status!=200){ATB.Logger.error("Received ",e.status," HTTP response code for: ",c);ATB.Logger.error("Error loading XML contents from the url: ",c,". Callback: ",g," will NOT be called.")}else{if(b&&b.httpsMetaData&&!d.verifyHTTPS(e.channel,b.httpsMetaData,b.httpsHighSecurity)){ATB.Logger.error("verifyHTTPS rejected verification of the download for url: "+c+". Callback: "+g+" will NOT be called.")}else{ATB.Logger.debug("Successfully downloaded XML contents from the url: ",c,"\n Response Headers: ",e.getAllResponseHeaders());ATB.Logger.debug("Fetched XML content: ",e.responseText);var h=e.responseXML;if(!h||h.childNodes.length==0){ATB.Logger.debug("Unable to fetch XML contents from (since the server response content type might not be correct): ",c,". Treating the raw text contents as XML..");var j=e.responseText;h=(new DOMParser()).parseFromString(j,"application/xml")}ATB.Logger.debug("Calling callback: ",g," with function params: ",f);g(c,h,f)}}}};e.send(null)}catch(a){ATB.Logger.error("Unable to fetch or process response from: ",c,". Error: ",a)}}else{ATB.Logger.warn("User not online. Network fetch for: ",c," disabled.")}return},getResponseXMLFromUrlSynchronously:function(a,i){var g="";if(typeof(a)!="undefined"&&a){if(this.isNetworkAvailable()){var h=false;if(h&&"nsIThreadManager" in Components.interfaces){var b=false;var c=Components.classes["@mozilla.org/thread-manager;1"].getService(Components.interfaces.nsIThreadManager).currentThread;var e=setTimeout(function(){ATB.Logger.error("Request for ",a," timed out. The user might not be connected online or the server is not responding.");b=true},this.sync_request_timeout);ATB.Logger.info("Making a 'psuedo-synchronous' request to fetch XML contents from url: ",a);this.getResponseXMLFromUrlAsynchronously(a,function(j,k){g=k},null,i);while(g==""&&!b){c.processNextEvent(true)}clearTimeout(e)}else{netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");ATB.Logger.info("*Synchronously* fetching text (XML) contents from url: ",a);var f=new XMLHttpRequest();f.open("GET",a,false);try{f.send(null)}catch(d){ATB.Logger.error("Could not contact url: ",a,". The user may be offline or the server is not responding.");return null}if(f.status!=200){ATB.Logger.error("Received ",f.status," HTTP response code for: ",a);return""}if(i&&i.httpsMetaData&&!this.verifyHTTPS(f.channel,i.httpsMetaData,i.httpsHighSecurity)){ATB.Logger.error("verifyHTTPS rejected verification of the download for url: "+a);return""}g=f.responseXML;if(g){ATB.Logger.debug("Successfully downloaded XML contents from the url: ",a,"\n Response Headers: ",f.getAllResponseHeaders());ATB.Logger.debug("Fetched XML contents: ",f.responseText)}if(!g||g.childNodes.length==0){ATB.Logger.info("Content for ",a," is not strict XML.. Treating content as string..");g=f.responseText}}}else{ATB.Logger.warn("User not online. Network fetch for: ",a," disabled.")}}else{ATB.Logger.error("Bad url passed to getResponseXMLFromUrlSynchronously: ",a)}return g},getBinaryResponseTextFromUrlAsynchronously:function(c,g,f,b){if(typeof(c)!="undefined"&&c){if(this.isNetworkAvailable()){ATB.Logger.info("*Asynchronously* fetching binary contents from url: ",c);netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");var e=new XMLHttpRequest();var d=this;try{e.open("GET",c,true);e.overrideMimeType("text/plain; charset=x-user-defined");e.onreadystatechange=function(h){if(e.readyState==4){if(e.status!=200){ATB.Logger.error("Received ",e.status," HTTP response code for: ",c);ATB.Logger.error("Error loading binary content from the url: ",c,". Callback: ",g," will NOT be called.")}else{if(b&&b.httpsMetaData&&!d.verifyHTTPS(e.channel,b.httpsMetaData,b.httpsHighSecurity)){ATB.Logger.error("verifyHTTPS rejected verification of the download for url: "+c+". Callback: "+g+" will NOT be called.")}else{ATB.Logger.debug("Successfully downloaded binary content from the url: ",c,"\n Response Headers: ",e.getAllResponseHeaders());ATB.Logger.debug("Calling callback: ",g," with function params: ",f);g(c,e.responseText,f)}}}};e.send(null)}catch(a){ATB.Logger.error("Unable to fetch or process response from: ",c,". Error: ",a)}}else{ATB.Logger.warn("User not online. Network fetch for: ",c," disabled.")}}else{ATB.Logger.error("Bad url passed to getBinaryResponseTextFromUrlAsynchronously: ",c)}return},getBinaryResponseTextFromUrlSynchronously:function(b,a){if(this.isNetworkAvailable()){var g=false;if(g&&"nsIThreadManager" in Components.interfaces){var h=false;var f="";var e=Components.classes["@mozilla.org/thread-manager;1"].getService(Components.interfaces.nsIThreadManager).currentThread;var d=setTimeout(function(){ATB.Logger.error("Request for ",b," timed out. The user may be offline or the server is not responding.");h=true},this.sync_request_timeout);ATB.Logger.info("Making a 'psuedo-synchronous' request to fetch text contents from url: ",b);this.getBinaryResponseTextFromUrlAsynchronously(b,function(i,j){f=j},null,a);while(f==""&&!h){e.processNextEvent(true)}clearTimeout(d);return f}else{ATB.Logger.info("*Synchronously* fetching binary contents from url: ",b);netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");var c=new XMLHttpRequest();c.open("GET",b,false);c.overrideMimeType("text/plain; charset=x-user-defined");c.send(null);if(c.status!=200){ATB.Logger.error("Received ",c.status," HTTP response code for: ",b);ATB.Logger.error("Error loading binary content from the url: ",b,". Returning empty content back to the caller.");return""}if(a&&a.httpsMetaData&&!this.verifyHTTPS(c.channel,a.httpsMetaData,a.httpsHighSecurity)){ATB.Logger.error("verifyHTTPS rejected verification of the download for url: "+b);return""}ATB.Logger.debug("Successfully downloaded binary content from the url: ",b,"\n Response Headers: ",c.getAllResponseHeaders());return c.responseText}}else{ATB.Logger.warn("User not online. Network fetch for: ",b," disabled.")}},isNetworkAvailableForContent:function(){if(!navigator.onLine){return false}var a=Components.classes["@mozilla.org/network/network-link-service;1"].getService(Components.interfaces.nsINetworkLinkService);if(a.linkStatusKnown){return a.isLinkUp}return this.isNetworkAvailable(true)},isNetworkAvailable:function(b){var a=new Date();if(b||((a-this.lastNetworkAvailabilityCheckTimeStamp)>30000)){this.lastNetworkAvailability=this.resolveDomain("ask.com",false);this.lastNetworkAvailabilityCheckTimeStamp=a;return this.lastNetworkAvailability}else{return this.lastNetworkAvailability}},resolveDomain:function(d,f){var i=false;if(d&&d.length>0&&d.indexOf(this.getSearchDomainString())==-1&&d.indexOf("\\")==-1&&d.indexOf(".")>0&&d.indexOf("/")==-1){if(ATB.Prefs.isAskBrowseEnabled()){var c=this.checkForCommonUrlTypos(d);if(c){var b=ATB.Prefs.getRedirectUri();if(ATB.Logger.isDebugEnabled()){ATB.Logger.debug("Using dns uri mask: ",b)}var a=b.replace(/{query}/g,encodeURIComponent(d));a=a+"&bdp=1";if(ATB.Logger.isInfoEnabled()){ATB.Logger.info("Forwarding this bad domain pattern : "+d+", to Ask.com's redirect url:"+a+", which will contact Sendori and redirect if required")}ATB.Core.navigateToUrl(null,a);return false}}if(ATB.Logger.isDebugEnabled()){ATB.Logger.warn("Resolving domain: "+d)}var e=Components.classes["@mozilla.org/network/dns-service;1"].getService(Components.interfaces.nsIDNSService);ATB.Logger.debug("Using the *synchronous* dns resolve method to resolve: ",d);var g=null;try{g=e.resolve(d,0)}catch(h){ATB.Logger.warn('Dns asyncResolve exception for domain: "',d,'". Exception: ',h);this.dnsLookupFailed(d,f)}if(g){i=true;ATB.Logger.warn("Dns lookup succeeded: ",g.getNextAddrAsString())}}else{ATB.Logger.warn("Domain resolve skipped since it does not meet the prerequisite conditions. Domain: ",d)}return i},dnsLookupFailed:function(b,a){if(typeof(a)!="undefined"&&a){ATB.Utils.navigateBadDnsDomainToAskResults(b)}},checkForCommonUrlTypos:function(a){for(var b=0;b<this.regExpList.length;b++){if(a.match(this.regExpList[b])){return true}}return false},getRequestStatesString:function(b){var a="";for(var c in this.stateFlagMap){if(b&this.stateFlagMap[c]){a+=c+", "}}return a},verifyHTTPS:function(a,m,l){var o=Components.interfaces;var g=Components.Exception;var h=Components.results;a.QueryInterface(o.nsIChannel);if(typeof m!="object"){throw new g("metadata must be an object!",h.NS_ERROR_ILLEGAL_VALUE)}var d=a.securityInfo;d.QueryInterface(o.nsITransportSecurityInfo);d.QueryInterface(o.nsISSLStatusProvider);var f=o.nsIWebProgressListener.STATE_IS_SECURE;var e=o.nsIWebProgressListener.STATE_SECURE_HIGH;if(!(d.securityState&f)){ATB.Logger.debug("verifyHTTPS:  HTTPS connection is not secure  "+a.URI.spec);return false}if(l){if(!(d.securityState&e)){ATB.Logger.debug("verifyHTTPS:  HTTPS connection is not highly secure.  "+a.URI.spec);return false}}var n=d.SSLStatus;n.QueryInterface(o.nsISSLStatus);var k=n.serverCert;if(!k){throw new g("Where's the certificate?",h.NS_ERROR_UNEXPECTED)}var j=o.nsIX509Cert.CERT_USAGE_SSLServer;var i=o.nsIX509Cert.VERIFIED_OK;if(k.verifyForUsage(j)!=i){ATB.Logger.debug("verifyHTTPS:  Certificate is not verified for SSL server use.  "+a.URI.spec);return false}for(var b in m){if(k[b]!==m[b]){var c=["verifyHTTPS:  metadata mismatch","prop: "+b,"certificate value: "+k[b],"metadata value:"+m[b],"url: "+a.URI.spec];ATB.Logger.debug(c.join("\n"));return false}}ATB.Logger.debug("verifyHTTPS:  verification succeeded  "+a.URI.spec);return true}};